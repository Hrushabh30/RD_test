<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- <link href="https://imagine-boat.s3.amazonaws.com/support/plugins/bootstrap/css/bootstrap.min.css" rel="stylesheet"> -->

    <link rel="stylesheet" href="/verify-style.css" />
    <link rel="stylesheet" href="/verify-responsive.css" />
    <style>
      #verificationVideo {
        max-width: 100%; /* Ensure the video does not exceed the width of its container */
        height: auto;    /* Maintain the aspect ratio of the video */
        display: block;  /* Ensure the video is treated as a block element */
        margin: 0 auto;  /* Center the video within its container */
      }
    </style>
  </head>
  <body>
    <div class="main-wrapper" id="mainWrapper">
      <div class="auth-code-wrapper">
        <div class="logo-section">
          <img src="/rd-logo.png" class="logo" alt="logo" />
        </div>

        <div class="auth-code-section">
          <form id="verificationForm" action="/verify" method="post" enctype="multipart/form-data">
            
            <h1 style="font-size: 36px">Product Authentication</h1>
  

            <div class="otp-bx">
              <input type="text" maxlength="1" class="otp-input" name="otp1" id="otp1" pattern="[A-Z0-9]">
              <input type="text" maxlength="1" class="otp-input" name="otp2" id="otp2" pattern="[A-Z0-9]">
              <input type="text" maxlength="1" class="otp-input" name="otp3" id="otp3" pattern="[A-Z0-9]">
              <input type="text" maxlength="1" class="otp-input" name="otp4" id="otp4" pattern="[A-Z0-9]">
              <input type="text" maxlength="1" class="otp-input" name="otp5" id="otp5" pattern="[A-Z0-9]">
              <input type="text" maxlength="1" class="otp-input" name="otp6" id="otp6" pattern="[A-Z0-9]">
              <input type="text" maxlength="1" class="otp-input" name="otp7" id="otp7" pattern="[A-Z0-9]">
              <input type="text" maxlength="1" class="otp-input" name="otp8" id="otp8" pattern="[A-Z0-9]">
          
            </div>
            <!-- <input type="hidden" id="verificationCode" name="verificationCode"> -->
            <div>
              <button type="button" class="verify-btn" id="verify-code">VERIFY</button>
            </div>
            
          </form>
          <% if (verificationResult !== null) { %>
            <div>
              <p>Verification Result: <%= verificationResult %></p>
            </div>
          <% } %>
        </div>
        <div class="auth-code-instructions">
          <h5>How do I verify my RD product?</h5>

          <p>
            Locate the QR code on the box and scan it with a QR code scanner
          </p>
          <br />
          <img src="/rd-logo.png" class="logo" alt="logo" />
        </div>
      </div>
      <div id="verificationResult"></div>

        
      </div>

      <video id="verificationVideo" controls style="display: none;">
        <source src="https://firebasestorage.googleapis.com/v0/b/rd-auth-2f9e4.appspot.com/o/Authenticity.mp4?alt=media&token=99fcf427-ab2f-4359-9ea8-c15c4446855c" type="video/mp4">
        Your browser does not support the video tag.
      </video>
    </div>

    <script defer>

      const setInputValuesFromQuery = () => {
        const urlParams = new URLSearchParams(window.location.search);
        const codeParam = urlParams.get('code');
    
        // Check if the 'code' parameter is present
        if (codeParam) {
          // Split the code into individual characters
          const codeCharacters = codeParam.split('');
    
          // Get the OTP input elements
          const otpInputs = document.querySelectorAll('.otp-input');
    
          // Loop through the OTP input elements and set their values
          otpInputs.forEach((input, index) => {
            if (codeCharacters[index]) {
              // Set the uppercase value for each input
              input.value = codeCharacters[index].toUpperCase();
    
              // If the current input is filled and there is a next input, focus on the next one
              if (input.value.length === input.maxLength && index < otpInputs.length - 1) {
                otpInputs[index + 1].focus();
              }
            }
          });
        }
      };
    
      // Call the function when the page is loaded
      setInputValuesFromQuery();


      const otpInputs = document.querySelectorAll('.otp-input');
      const otpCount = otpInputs.length;

      otpInputs.forEach((input, index) => {
        input.addEventListener('input', function() {
          this.value = this.value.toUpperCase();
          
          // If the current input is filled and there is a next input, focus on the next one
          if (this.value.length === this.maxLength && index < otpCount - 1) {
            otpInputs[index + 1].focus();
          }
        });
      });

      document.getElementById('verify-code').addEventListener('click', function() {
        const otpValues = Array.from(otpInputs).map(input => input.value);

        // Ensure that the values are valid alphanumeric characters
        const isValidAlphanumeric = (value) => /^[A-Z0-9]$/.test(value);

        if (otpValues.some(value => !isValidAlphanumeric(value))) {
          console.error('Invalid Alphanumeric characters');
          return;
        }
    
        console.log('Received OTPs:', otpValues);
    
        // Create a FormData object to handle the form data
        const formData = new FormData();
        otpValues.forEach((value, index) => formData.append(`otp${index + 1}`, value));
    
        console.log('Form Data:', formData);  // Add this line for additional logging
    
        // Use the Fetch API to submit the form data
        fetch('/verify', {
          method: 'POST',
          body: formData,
        })
        .then(response => response.json())  // Parse the JSON response
        .then(data => {
          // Handle the response data as needed
          console.log('Verification Result:', data);
          if (data.verificationResult === false) {
            // Hide the main wrapper and show the video
            
            document.getElementById('verificationResult').innerText = 'Verification Result: ' + 'video not playing';
          } else {
            // Update the DOM with the verification result
           
            console.log('Before hiding elements');
            document.getElementById('mainWrapper').style.display = 'none';
            document.getElementById('verificationVideo').style.display = 'block';
            console.log('After hiding elements');
    
            // Play the video
            document.getElementById('verificationVideo').play();
          }
    
          // Update the DOM with the verification result
          
        })
        .catch(error => console.error('Error:', error));
        
      });
    </script>
    
    
  </body>
</html>

